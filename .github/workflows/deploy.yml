name: Deploy
on:
  release:
    types: [created]
env:
  TENNO_CIPHER: ${{ secrets.TENNO_CIPHER }}
  TENNO_FIREBASE: ${{ secrets.TENNO_FIREBASE }}
  TENNO_STORE: ${{ secrets.TENNO_STORE }}
  NAVIS_SERVICE_ACCOUNT: ${{ secrets.NAVIS_SERVICE_ACCOUNT }}
  FIREBASE_IOS: ${{ secrets.FIREBASE_IOS }}
  FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
  FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
  MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
jobs:
  android-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: stable
      - name: Decode signing key and services json
        run: |
          base64 -d <<< $TENNO_STORE > android/keystore.jks
          base64 -d <<< $TENNO_FIREBASE > android/app/google-services.json
          base64 -di <<< $NAVIS_SERVICE_ACCOUNT > android/app/fastlane.json
      - name: Build App bundle
        run: flutter build appbundle
      - name: Google Play Store Deploy
        uses: maierj/fastlane-action@v1.4.0
        with:
          lane: beta
          subdirectory: android
      - name: Clean build directory
        run: flutter clean
      - name: Build split apks per abi
        run: flutter build apk --split-per-abi
      - name: Github Releases Deploy
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          file: "build/app/outputs/apk/release/*.apk"
          tags: true
          draft: false
  ios: # Github's MacOS images come with xcode preinstalled
    runs-on: macos-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v2
      - uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.FASTLANE_DEPLOY_KEY }}
      - uses: subosito/flutter-action@v1
        with:
          channel: stable
      - name: Decode service plist
        run: base64 -d <<< $FIREBASE_IOS > ios/Runner/GoogleService-Info.plist
      - name: Build ios using flutter
        run: flutter build ios --no-codesign
      - name: App Store Deploy
        uses: maierj/fastlane-action@v1.4.0
        with:
          lane: beta
          subdirectory: ios
      - name: Github Releases Deploy
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          file: "ios/app-ios-release.ipa"
          tags: true
          draft: false
